#!/usr/bin/env coco

fs                      = require 'fs'
path    = {dirname}     = require 'path'
subproc = {exec, spawn} = require 'child_process'
exists  = fs.existsSync or path.existsSync

express        = require 'express'
LimnMiddleware = require './middleware'

/**
 * Create server
 */
app = exports = module.exports = express.createServer()



/**
 * Load Limn middleware
 */
limn = app.limn = LimnMiddleware do
    varDir  : process.env.LIMN_VARDIR or './var'
    proxy   :
        enabled   : true
        whitelist : '*' #/.*/ throws an error in minimatch - does not support regex as assumed

# app.use express.compress()
app.use limn
# app.use '/vis', limn

# show exceptions, pretty stack traces ### FIXME
app.use express.errorHandler { +dumpExceptions, +showStack }


mainfile = path.basename require.main?.filename
if require.main is module or 'Cokefile' is mainfile
    PORT = 5000
    PORT = parseInt(that, 10) if process.env.LIMN_PORT
    
    NODE_ENV    = process.env.NODE_ENV    or 'development'
    LIMN_VARDIR = process.env.LIMN_VARDIR or './var'
    LIMN_DATA   = "#LIMN_VARDIR/data"
    
    REV = process.env.LIMN_REV or 'HEAD'
    try REV = require '../src/version' catch e
    
    console.log s = "Limn Server (port=#PORT, env=#NODE_ENV, rev=#REV, vardir=#LIMN_VARDIR, data=#LIMN_DATA)"
    console.log '=' * s.length
    app.listen PORT
